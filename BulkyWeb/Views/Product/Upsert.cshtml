<!--
    Als je hier een Product model aanmaakt maar er wordt vanuit de view niets doorgegeven wordt
    er hier een leeg Product object aangemaakt met de default values! 
-->

@model ProductVM



<form method="post" enctype="multipart/form-data" class="container mt-5">
    <input asp-for="Product.Id" hidden />
    <input asp-for="Product.ImageUrl" hidden />
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h2 class="mb-0">@(Model.Product.Id!=0?"Update":"Create") Product</h2>
        </div>
        <div class="row">
            <div class="col-10">
                <div class="card-body">

                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                    <div class="mb-3">
                        <label asp-for="Product.Title" class="form-label"></label>
                        <input asp-for="Product.Title" class="form-control" />
                        <span asp-validation-for="Product.Title" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Product.Author" class="form-label"></label>
                        <input asp-for="Product.Author" class="form-control" />
                        <span asp-validation-for="Product.Author" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Product.Description" class="form-label"></label>
                        <textarea asp-for="Product.Description" class="form-control"></textarea>
                        <span asp-validation-for="Product.Description" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Product.ISBN" class="form-label"></label>
                        <input asp-for="Product.ISBN" class="form-control" />
                        <span asp-validation-for="Product.ISBN" class="text-danger"></span>
                    </div>

                    <div class="row">
                        <div class="col-md-3 mb-3">
                            <label asp-for="Product.ListPrice" class="form-label"></label>
                            <input asp-for="Product.ListPrice" class="form-control" />
                            <span asp-validation-for="Product.ListPrice" class="text-danger"></span>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label asp-for="Product.Price" class="form-label"></label>
                            <input asp-for="Product.Price" class="form-control" />
                            <span asp-validation-for="Product.Price" class="text-danger"></span>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label asp-for="Product.Price50" class="form-label"></label>
                            <input asp-for="Product.Price50" class="form-control" />
                            <span asp-validation-for="Product.Price50" class="text-danger"></span>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label asp-for="Product.Price100" class="form-label"></label>
                            <input asp-for="Product.Price100" class="form-control" />
                            <span asp-validation-for="Product.Price100" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Product.CategoryId" class="form-label"></label>
                        <select asp-for="Product.CategoryId" asp-items="@Model.CategoryList" class="form-select">
                            <option disabled selected>--Select Category--</option>
                        </select>
                        <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="Product.ImageUrl" class="form-label"></label>
                        <input type="file" name="file" class="form-control" />
                    </div>


                    <div class="row mt-4">
                        <div class="col-md-6 mb-2">
                            @if (Model.Product.Id != 0)
                            {
                                <button type="submit" class="btn btn-success w-100">Update</button>
                            }
                            else
                            {
                                <button type="submit" class="btn btn-success w-100">Create</button>
                            }

                        </div>
                        <div class="col-md-6 mb-2">
                            <a asp-controller="Product" asp-action="Index" class="btn btn-outline-secondary w-100">
                                Back to List
                            </a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-2">
                <img src="@Model.Product.ImageUrl" width="100%" 
                style="border-radius:5px; border:1px solid #bbb9b9" />
            </div>
        </div>
        
    </div>
</form>


@* Omdat de partial view hier script related is moet je dit in @section Scripts plaatsen. Indien je een niet script gerelateerde 
    parial view wilt consumen mag dit gewoon in de form plaatsen met de tag <partial>. 
    Default location voor elke partial view is de 'Shared' folder, dus hij gaat daar zoeken.
    Eerst wordt de client side validation nu uitgevoerd, enkel de custom validation die we geschreven hebben in de productController 
    zal op de server getest worden. 
    *@
@section Scripts{
    @{
        <partial name="_ValidationScriptsPartial" />

        <script>
            tinymce.init({
              selector: 'textarea',
              plugins: [
                // Core editing features
                'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 'image', 'link', 'lists', 'media', 'searchreplace', 'table', 'visualblocks', 'wordcount',
                // Your account includes a free trial of TinyMCE premium features
                // Try the most popular premium features until Jun 5, 2025:
                'checklist', 'mediaembed', 'casechange', 'formatpainter', 'pageembed', 'a11ychecker', 'tinymcespellchecker', 'permanentpen', 'powerpaste', 'advtable', 'advcode', 'editimage', 'advtemplate', 'ai', 'mentions', 'tinycomments', 'tableofcontents', 'footnotes', 'mergetags', 'autocorrect', 'typography', 'inlinecss', 'markdown','importword', 'exportword', 'exportpdf'
              ],
              toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
              tinycomments_mode: 'embedded',
              tinycomments_author: 'Author name',
              mergetags_list: [
                { value: 'First.Name', title: 'First Name' },
                { value: 'Email', title: 'Email' },
              ],
              ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
            });
        </script>
    }
}